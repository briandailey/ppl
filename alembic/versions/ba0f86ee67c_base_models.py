"""base models

Revision ID: ba0f86ee67c
Revises: None
Create Date: 2012-11-02 15:46:47.765531

"""

# revision identifiers, used by Alembic.
revision = 'ba0f86ee67c'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('sign_in_count', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('access_token_secret', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('mailing_list', sa.String(), nullable=True),
    sa.Column('meeting_info', sa.Text(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('twitter', sa.String(), nullable=True),
    sa.Column('github_name', sa.String(), nullable=True),
    sa.Column('imported_from_provider', sa.String(), nullable=True),
    sa.Column('imported_from_id', sa.String(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('imported_from_screen_nane', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('groups_taggings',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('groups_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'groups_id')
    )
    op.create_table('companies_taggings',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('companies_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['companies_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'companies_id')
    )
    op.create_table('group_members',
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint()
    )
    op.create_table('profiles_taggings',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('profiles_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profiles_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'profiles_id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profiles_taggings')
    op.drop_table('group_members')
    op.drop_table('companies_taggings')
    op.drop_table('groups_taggings')
    op.drop_table('profiles')
    op.drop_table('companies')
    op.drop_table('tags')
    op.drop_table('groups')
    op.drop_table('users')
    ### end Alembic commands ###
