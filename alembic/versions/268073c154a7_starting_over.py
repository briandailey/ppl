"""starting over

Revision ID: 268073c154a7
Revises: None
Create Date: 2012-10-24 20:14:26.663264

"""

# revision identifiers, used by Alembic.
revision = '268073c154a7'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discriminator', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('sign_in_count', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('access_token_secret', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('association_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['association_id'], ['tag_association.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('mailing_list', sa.String(), nullable=True),
    sa.Column('meeting_info', sa.Text(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.Column('tag_association_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_association_id'], ['tag_association.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('twitter', sa.String(), nullable=True),
    sa.Column('github_name', sa.String(), nullable=True),
    sa.Column('imported_from_provider', sa.String(), nullable=True),
    sa.Column('imported_from_id', sa.String(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('imported_from_screen_nane', sa.String(), nullable=True),
    sa.Column('tag_association_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_association_id'], ['tag_association.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('tag_association_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_association_id'], ['tag_association.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_members',
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint()
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('group_members')
    op.drop_table('companies')
    op.drop_table('profiles')
    op.drop_table('groups')
    op.drop_table('tag')
    op.drop_table('users')
    op.drop_table('tag_association')
    ### end Alembic commands ###
